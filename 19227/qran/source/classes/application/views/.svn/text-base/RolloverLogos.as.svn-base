/** *	RolloverLogos Class * *	@langversion ActionScript 3.0 *	@playerversion 9.0 *	@since 2010-10-10                       *	@author Junie Threatt *	@version 1.0.0 * *	all code copyright (c) 2010 T3 The Think Tank. All rights reserved. *	Re-use of this code without express written permission is prohibited. *	 */package application.views{	// import flash	import flash.display.*;	import flash.events.*;	import flash.external.*;    import flash.utils.*;	import flash.net.URLRequest;	import flash.net.navigateToURL;	// import external	import gs.*;	import gs.easing.*;	import gs.plugins.*;			import application.events.SlideShowEvent;	public class RolloverLogos extends MovieClip	{		//---------------------------------------------------------------------		// variables		//---------------------------------------------------------------------		private var _scope:MovieClip;		private var _numOfItems:Number;		private var _bannerID:Number;		private var _linkArray:Array;                static private var SPEED:Number = 0.7;        static private var EASE:Function = Expo.easeOut;        		//---------------------------------------------------------------------		// constructor		//---------------------------------------------------------------------		public function RolloverLogos(scope:MovieClip, numOfItems:Number, bannerID:Number, linkArray:Array)		{			_scope 				= scope;			_numOfItems 		= numOfItems;			_bannerID 			= bannerID;			_linkArray 			= linkArray;						// TweenPlugin.activate([GlowFilterPlugin]);						init();		};						//---------------------------------------------------------------------		// private methods and handlers		//---------------------------------------------------------------------				private function init():void		{						var item:MovieClip;			var dlay:Number = 1;			for(var i:Number = 0; i < _numOfItems; i++)			{				// -- init "item" clips															item = MovieClip(_scope.getChildByName("item"+i));				item.id = i;								// use _bannerID for versioning or slight changes									switch(_bannerID)				{					case 1:						item.addEventListener(MouseEvent.ROLL_OVER, checkRollOver);						item.addEventListener(MouseEvent.ROLL_OUT, checkRollOut);						item.addEventListener(FocusEvent.FOCUS_IN, focusInHandler);						item.addEventListener(FocusEvent.FOCUS_OUT, focusOutHandler);                    							item.link = _linkArray[i];						item.addEventListener(MouseEvent.CLICK, checkRelease);						item.buttonMode = item.useHandCursor = item.mouseEnabled = true;						item.mouseChildren = false;												TweenMax.from(item, SPEED, { scaleX:0, scaleY:0, y:item.y+20, delay:dlay, ease:EASE });							dlay += .1;						break;									};											};		};				private function focusInHandler(e:FocusEvent):void {			openClip(e.currentTarget);		}				private function focusOutHandler(e:FocusEvent):void {			closeClip(e.currentTarget);		}				private function openClip(m:Object):void		{			var id:Number = m.id;						// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						// scale item up			var mc:MovieClip = m as MovieClip;			// TweenMax.to(mc, SPEED, { scaleX:1.1, scaleY:1.1, glowFilter:{ color:0x0066CC, alpha:.5, blurX:30, blurY:30 }, ease:EASE });			TweenMax.to(mc, SPEED, { scaleX:1.2, scaleY:1.2, ease:EASE });		}				private function closeClip(m:Object):void		{			var id:Number = m.id;						// resume the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));						// scale item down			var mc:MovieClip = m as MovieClip;			TweenMax.to(mc, SPEED, { scaleX:1, scaleY:1, ease:EASE });		}						private function checkRollOver(e:MouseEvent):void		{			var id:Number = e.currentTarget.id;						// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						// scale item up			var mc:MovieClip = e.target as MovieClip;			TweenMax.to(mc, SPEED, { scaleX:1.2, scaleY:1.2, ease:EASE });		};						private function checkRollOut(e:MouseEvent):void		{			var id:Number = e.currentTarget.id;						// resume the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));						// scale item down			var mc:MovieClip = e.target as MovieClip;			TweenMax.to(mc, SPEED, { scaleX:1, scaleY:1, ease:EASE });		};						private function checkRelease(e:MouseEvent):void		{			if(e.currentTarget.link != "")			{				var req:URLRequest = new URLRequest(e.currentTarget.link);				navigateToURL(req, "_self");			};		};			};	}; // end