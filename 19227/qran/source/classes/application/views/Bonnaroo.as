/** *	Bonnaroo Class * *	@langversion ActionScript 3.0 *	@playerversion 9.0 *	@since 2010-05-04                       *	@author Junie Threatt *	@version 1.0.0 * *	all code copyright (c) 2010 T3 The Think Tank. All rights reserved. *	Re-use of this code without express written permission is prohibited. *	 */package application.views{	// import flash	import flash.display.*;	import flash.events.*;	import flash.external.*;    import flash.utils.*;	import flash.net.URLRequest;	import flash.net.navigateToURL;	// import external	import gs.*;	import gs.easing.*;	import gs.plugins.*;	import application.events.SlideShowEvent;	public class Bonnaroo extends MovieClip	{		//---------------------------------------------------------------------		// variables		//---------------------------------------------------------------------		private var _scope:MovieClip;		private var _numOfPanels:Number;		private var _linkArray:Array;		private var _bannerID:Number;		private var _topPanel:Number;                private var SPEED:Number = 0.7;        private var EASE:Function = Expo.easeOut;        		//---------------------------------------------------------------------		// constructor		//---------------------------------------------------------------------		public function Bonnaroo(scope:MovieClip, numOfPanels:Number, bannerID:Number, linkArray:Array)		{			_scope 			= scope;			_numOfPanels 	= numOfPanels;			_bannerID 		= bannerID;			_linkArray 		= linkArray;			_topPanel		= 0;						TweenPlugin.activate([TintPlugin, RemoveTintPlugin]);						initPanels();		};						//---------------------------------------------------------------------		// private methods and handlers		//---------------------------------------------------------------------		private function initPanels():void		{			var mc:MovieClip;			var desc:MovieClip;			for(var i:Number = 0; i < _numOfPanels; i++)			{				mc = MovieClip(_scope.getChildByName("panel"+i));				desc = MovieClip(_scope.getChildByName("desc"+i));				mc.id = i;				mc.ox = mc.x;				mc.oy = mc.y;				mc.cta.alpha = 0;				mc.link = _linkArray[i];				mc.btn.buttonGlow.alpha = 0;								mc.addEventListener(MouseEvent.ROLL_OVER, rollOver);				mc.addEventListener(MouseEvent.ROLL_OUT, rollOut);				mc.addEventListener(MouseEvent.CLICK, release);				mc.buttonMode = mc.useHandCursor = true;								desc.id = i;				desc.ox = desc.x;				desc.x += 20;				desc.alpha = 0;								//  _bannerID:				//  1: 19345_Bonnaroo_hero						};		};						private function rollOver(e:MouseEvent):void		{			// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						var mc:MovieClip = MovieClip(e.currentTarget);			var desc:MovieClip = MovieClip(_scope.getChildByName("desc"+mc.id));											// bring panel to front			// _scope.setChildIndex(MovieClip(e.currentTarget), _scope.numChildren - 1);									// show the buttonGlow		    TweenLite.to(mc.btn.buttonGlow, SPEED/2, { alpha:1, ease:EASE });			// hide purple button			TweenLite.to(mc.btn.purple, SPEED/2, { alpha:0, ease:EASE });						// change panel bg color			TweenLite.to(mc.bg, SPEED, { tint:0xA8D1FF, ease:EASE });						// tint copy			TweenLite.to(mc.copy, SPEED, { tint:0x000000, ease:EASE });						// show cta			TweenLite.to(mc.cta, SPEED, { alpha:1, ease:EASE });						// show description			TweenLite.to(desc, SPEED, { alpha:1, x:desc.ox, ease:EASE });						switch(mc.id)			{				case 0:					TweenLite.to(mc, SPEED, { rotation:-9, x:354, y:127, ease:EASE });				break;								case 1:					TweenLite.to(mc, SPEED, { rotation:-8, ease:EASE });				break;			};						// bring panel to front (better way)			if(_topPanel != mc.id)			{				swapPanelDepths("panel0", "panel1");				_topPanel = mc.id;			};		};						private function rollOut(e:MouseEvent):void		{			// resume the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));						var mc:MovieClip = MovieClip(e.currentTarget);			var desc:MovieClip = MovieClip(_scope.getChildByName("desc"+mc.id));						// hide the buttonGlow		    TweenLite.to(mc.btn.buttonGlow, SPEED/2, { alpha:0, ease:EASE });			// show purple button			TweenLite.to(mc.btn.purple, SPEED/2, { alpha:1, ease:EASE });						// change panel rotation, x, y			TweenLite.to(mc.bg, SPEED, { removeTint:true, ease:EASE });						// change panel rotation, x, y			TweenLite.to(mc, SPEED, { rotation:0, x:mc.ox, y:mc.oy, ease:EASE });						// tint copy			TweenLite.to(mc.copy, SPEED, { removeTint:true, ease:EASE });						// hide cta			TweenLite.to(mc.cta, SPEED, { alpha:0, ease:EASE });						// hide description			TweenLite.to(desc, SPEED, { alpha:0, x:desc.ox+20, ease:EASE });		};						private function release(e:MouseEvent):void		{			if(e.currentTarget.link != "")			{				var req:URLRequest = new URLRequest(e.currentTarget.link);				// trace(req.url);				navigateToURL(req, "_self");  // <------- NEEDS TO OPEN IN SAME WINDOW			}		};						private function swapPanelDepths(mc0:String, mc1:String):void		{			_scope.swapChildren(_scope.getChildByName(mc0), _scope.getChildByName(mc1));		};	};}; // end