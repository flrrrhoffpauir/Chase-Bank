/** *	RolloverButtonOverview Class * *	@langversion ActionScript 3.0 *	@playerversion 9.0 *	@since 2009-09-04                       *	@author Junie *	@version 1.0.0 * *	all code copyright (c) 2009 T3 The Think Tank. All rights reserved. *	Re-use of this code without express written permission is prohibited. *	 */package application.views{	// import flash	import flash.display.*;	import flash.events.*;	import flash.external.*;    import flash.utils.*;	import flash.net.URLRequest;	import flash.net.navigateToURL;	// import external	import gs.*;	import gs.easing.*;		import application.events.SlideShowEvent;	public class RolloverButtonOverview6 extends MovieClip	{		//---------------------------------------------------------------------		// variables		//---------------------------------------------------------------------		private var _scope:MovieClip;		private var _linkArray:Array;		private var _mcArray:Array;		private var _bannerID:Number;		private var _numOfPanels:Number;		private var _currPanel:Number;		private var _timer:Timer;                private var SPEED:Number = 0.7;        private var EASE:Function = Expo.easeOut;		static private var PAUSE_TIME:Number = 1;        		//---------------------------------------------------------------------		// constructor		//---------------------------------------------------------------------		public function RolloverButtonOverview6(scope:MovieClip, numOfPanels:Number, bannerID:Number, linkArray:Array)		{			_scope 			= scope;			_numOfPanels 	= numOfPanels;			_bannerID 		= bannerID;			_linkArray 		= linkArray;			_mcArray		= [];			_currPanel		= -1;						addEventListener(Event.ADDED_TO_STAGE, initPanels);		};						//---------------------------------------------------------------------		// private methods and handlers		//---------------------------------------------------------------------		private function initPanels(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, initPanels);						var mc:MovieClip;			for(var i:Number = 0; i < _numOfPanels; i++)			{				mc = MovieClip(_scope.getChildByName("panel"+i));				mc.link = _linkArray[i];				mc.btn.buttonGlow.alpha = 0.0;				mc.btn.blue.alpha = 0.0;								mc.addEventListener(MouseEvent.ROLL_OVER, rollOver);				mc.addEventListener(MouseEvent.ROLL_OUT, rollOut);				mc.addEventListener(MouseEvent.CLICK, release);				mc.addEventListener(FocusEvent.FOCUS_IN, focusInHandler, false, 0, true);				mc.addEventListener(FocusEvent.FOCUS_OUT, focusOutHandler, false, 0, true);								mc.buttonMode = mc.useHandCursor = true;				mc.mouseChildren = false;				_mcArray[i] = mc;								if(i == _numOfPanels - 1) startTimer();			};		};				private function focusInHandler(e:FocusEvent):void {			// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						// show the buttonGlow, hide purple button, show blue button		    TweenMax.to(e.currentTarget.btn.buttonGlow, SPEED, { alpha:1.0, ease:EASE });			TweenMax.to(e.currentTarget.btn.purple, SPEED/2, { alpha:0, ease:EASE });			TweenMax.to(e.currentTarget.btn.blue, SPEED/2, { alpha:1, ease:EASE });						// expand the panel			e.currentTarget.gotoAndPlay("open");						if(_timer.running)			{				normalizePanels(MovieClip(e.target));				_timer.stop();			};		}				private function focusOutHandler(e:FocusEvent):void {			// resume the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));						// hide the buttonGlow, show purple button, hide blue button		    TweenMax.to(e.currentTarget.btn.buttonGlow, SPEED, { alpha:0.0, ease:EASE });			TweenMax.to(e.currentTarget.btn.purple, SPEED/2, { alpha:1, ease:EASE });			TweenMax.to(e.currentTarget.btn.blue, SPEED/2, { alpha:0, ease:EASE });						// collapse the panel			e.currentTarget.gotoAndPlay("close");		}						private function rollOver(e:MouseEvent):void		{			// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						// show the buttonGlow, hide purple button, show blue button		    TweenMax.to(e.currentTarget.btn.buttonGlow, SPEED, { alpha:1.0, ease:EASE });			TweenMax.to(e.currentTarget.btn.purple, SPEED/2, { alpha:0, ease:EASE });			TweenMax.to(e.currentTarget.btn.blue, SPEED/2, { alpha:1, ease:EASE });						// expand the panel			e.currentTarget.gotoAndPlay("open");						if(_timer.running)			{				normalizePanels(MovieClip(e.target));				_timer.stop();			};		};						private function rollOut(e:MouseEvent):void		{			// resume the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));						// hide the buttonGlow, show purple button, hide blue button		    TweenMax.to(e.currentTarget.btn.buttonGlow, SPEED, { alpha:0.0, ease:EASE });			TweenMax.to(e.currentTarget.btn.purple, SPEED/2, { alpha:1, ease:EASE });			TweenMax.to(e.currentTarget.btn.blue, SPEED/2, { alpha:0, ease:EASE });						// collapse the panel			e.currentTarget.gotoAndPlay("close");					};						private function release(e:MouseEvent):void		{			if(e.currentTarget.link != "")			{				var req:URLRequest = new URLRequest(e.currentTarget.link);				navigateToURL(req, "_self");  // NEEDS TO OPEN IN SAME WINDOW			};		};						private function startTimer():void		{			_timer = new Timer(PAUSE_TIME * 1000);			_timer.addEventListener(TimerEvent.TIMER, selectPanelFromTimer);			_timer.start();		};						private function selectPanelFromTimer(e:TimerEvent):void		{			_timer.delay = 3000;			if(_currPanel == _numOfPanels - 1)			{				_timer.stop();				dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));				hidePanel(_mcArray[_numOfPanels-1]);			} else {				if(_currPanel != -1) hidePanel(_mcArray[_currPanel]);				_currPanel += 1;				showPanel(_mcArray[_currPanel]);			};		};						private function showPanel(mc:MovieClip):void		{			TweenMax.to(mc.btn.buttonGlow, SPEED, { alpha:1.0, ease:EASE });			TweenMax.to(mc.btn.purple, SPEED/2, { alpha:0, ease:EASE });			TweenMax.to(mc.btn.blue, SPEED/2, { alpha:1, ease:EASE });			mc.gotoAndPlay("open");		};						private function hidePanel(mc:MovieClip):void		{			TweenMax.to(mc.btn.buttonGlow, SPEED, { alpha:0.0, ease:EASE });			TweenMax.to(mc.btn.purple, SPEED/2, { alpha:1, ease:EASE });			TweenMax.to(mc.btn.blue, SPEED/2, { alpha:0, ease:EASE });			if(mc.currentFrame != 1) mc.gotoAndPlay("close");		};						private function normalizePanels(ro:MovieClip):void		{			var mc:MovieClip;			for(var i:Number = 0; i < _numOfPanels; i++)			{				mc = _mcArray[i];				if(ro != mc) hidePanel(mc);			};		};	};}; // end