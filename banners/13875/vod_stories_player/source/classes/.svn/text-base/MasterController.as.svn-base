/** *	MasterController Class, Created 2007-10-05 *	Copyright (c) 2007 T3. All rights reserved. * *	@author Timothy Harold *	@version 1.0 *	*/import classes.VideoController;import classes.URLShare;import classes.VidData;import classes.VidNav;import classes.Broadcaster;class classes.MasterController{	// static properties				// private properties	private var __vd:VidData;	private var __xmlObj:XML;	private var __broadcaster:Broadcaster;	private var __class_ref:MasterController;	private var __vidPlayer:VideoController;	private var __vidNav:VidNav;	private var __urlShare:URLShare;	private var __urlSharePath:String = "http://www.chasefreedomnow.com/fun/fun_vod.asp?vid=";	private var __defaultVidNum:Number;	private var __scope:MovieClip;		// public properties			// Class constructor	/**	 * 	 *	 * @params xxxxx xxxxxxxxxxx	 */	function MasterController(_scope:MovieClip, _broadcaster:Broadcaster, _defaultVidNum:Number, _vidNav:MovieClip, _vidPlayer:MovieClip, _urlShare:URLShare)	{				// start the app		// init(); // called on the Main Timeline				// reference to the MainTimeline		__scope = _scope;				// point to this Class		__class_ref = this;				// reference to the Broadcaster Class		__broadcaster = _broadcaster;				// reference to the default video number to play initally		__defaultVidNum = _defaultVidNum;				// reference to the video player		__vidPlayer = new VideoController(_scope, _broadcaster, _vidPlayer)				// reference to the URLShare instance		__urlShare = _urlShare;		__urlShare.urlPath = __urlSharePath;// pass it the starting path				// reference to the VidNav instance on the Stage		__vidNav = new VidNav(_vidNav, _broadcaster);		__broadcaster.addEventListener("onTileNav", __vidNav, "buildNavTiles");				// set up a listener for the tile clicks to play videos		__broadcaster.addEventListener("onTileClick", this, "onTileClickVidPlay");	}				// private methods  ------------------------------------------------------------------------------			// public methods  -------------------------------------------------------------------------------	/**	 * 	 *	 * @param xxxx xxxxxxx	 */	public function init():Void	{		// get the XML data to build the mcVidNav		__vd = new VidData("data/vods.xml", __broadcaster);		__broadcaster.addEventListener("onXMLData", __class_ref, "relayXMLToVidNav");		__vd.getXML();	}		// handlers/listeners  ---------------------------------------------------------------------------	/**	 * Once the XML data hs been loaded, this callback is invoked from the VidData Class.	 * The VidNav Class will then build the nav tiles based on the XML data.	 *	 * @param _infoObject An Object that contains data in it's data property.	 */	public function relayXMLToVidNav(_infoObject:Object):Void	{		// parse the xml and build the nav tiles		__broadcaster.dispatchEvent("onTileNav", _infoObject.data);	}		/**	 * When a nav tile is clicked, this handler notifies the VidController to play the tile's associated video.	 *	 * @param _infoObject An Object that contains a reference to the tile's id (video number, too) in it's data property.	 */	public function onTileClickVidPlay(_infoObject:Object):Void	{		// when a nav tile is clicked, play the video		trace("MasterController - onTileClickVidPlay: " + _infoObject.data.id);				// insert the direct path in the URLShare		__urlShare.setURLPath(_infoObject.data.id);				// the the mcVideoPlayer which video to play [add 1 to match flv filenames tale1.flv, etc]		__vidPlayer.playNewVideo(_infoObject.data.id + 1);	}				// end}