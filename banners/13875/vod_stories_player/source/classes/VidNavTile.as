/** *	VidNavTile Class, Created 2007-10-05 *	Copyright (c) 2007 T3. All rights reserved. * *	@author Timothy Harold *	@version 1.0 *	*/import classes.Broadcaster;class classes.VidNavTile extends MovieClip{	// static properties				// private properties	private var __mcl:MovieClipLoader;	private var __mclListener:Object;	private var __tileColor:Number;	private var __tileColorRollOver:Number = 0x1E6DB0;	private var __tileColorRollOut:Number = 0x333333;		private var __selected:Boolean = false;	private var __thumbImage:String;	private var __vidPath:String;	private var __vidName:String;	private var __vidAirDate:String;	private var __vidTime:String;	private var __broadcaster:Broadcaster;	private var __id:Number;			// public properties	public var mcPlayIndicator:MovieClip;	public var txtName:TextField;	public var txtAirDate:TextField;	public var txtTime:TextField;	public var txtOAD:TextField;	public var txtRT:TextField;		public var mcVidThumb:MovieClip;		public var mcVidNavBackground:MovieClip;	public var mcVidRollOver:MovieClip;			// Class constructor	/**	 * 	 *	 * @params xxxxx xxxxxxxxxxx	 */	function VidNavTile()	{		init();	}				// private methods  -------------------------------------------------------------------------------------------------------------------------------------------------------------	/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function init():Void	{		// instantiate the MovieClipLoader and Listener		__mcl = new MovieClipLoader();		__mclListener = new Object();		__mcl.addListener(__mclListener);		__mclListener.onLoadStart = function(_targMC:MovieClip):Void		{			mcVidThumb.mcThumbHolder._alpha = 0;		}		__mclListener.onLoadProgress = function(_targMC:MovieClip, _numBytesLoaded:Number, _numBytesTotal:Number):Void		{			var percent:Number = Math.round(_numBytesLoaded / _numBytesTotal * 88);			_targMC._parent.mcLoaderBar._width = percent;			//trace(percent);		}		__mclListener.onLoadComplete = function(_targMC:MovieClip):Void		{			_targMC.onEnterFrame = function():Void			{				this._alpha += 5;				if(this._alpha >= 100)				{					this._alpha = 100;					delete this.onEnterFrame;				}			}		}		 		// reset the color of the Play icon		mcPlayIndicator.gotoAndStop("off");				// clear out all of the TextFields		txtName.text = "";		txtAirDate.text = "";		txtTime.text = "";				// reset the color ofthe tile's background (do not pass a color - default is #666666)		setBackgroundColor();				// hide the RollOver highlight - mcVidRollOver		mcVidRollOver._visible = false;						// TESTING **************************				//loadThumbImage("images/1_plus_one.jpg");			}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function activate():Void	{		// re-enable		resetSelection();	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function deactivate():Void	{		// disable		setSelection();	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function setBackgroundColor(_rgb:Number):Void	{		// track the background color for onRollOut		__tileColor = _rgb;				// create a Color object (FP6 friendly)		var colorObj:Color = new Color(mcVidNavBackground);				// default to black if hex is not passed		var color:Number = (_rgb == undefined || _rgb == null) ? 0xEFEFEF : _rgb;				// set the color of the background		colorObj.setRGB(color);	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function setRollOver():Void	{		// hide the tile background		mcVidNavBackground._visible = false;				// show the RollOver highlight - mcVidRollOver		mcVidRollOver._visible = true;						mcVidThumb.mcVidThumbFrame.gotoAndStop("on");		mcPlayIndicator.gotoAndStop("on");		txtName.textColor = txtAirDate.textColor = txtTime.textColor = txtOAD.textColor = txtRT.textColor = __tileColorRollOver;	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function resetRollOut():Void	{		// show the tile background		mcVidNavBackground._visible = true;				// hide the RollOver highlight - mcVidRollOver		mcVidRollOver._visible = false;						mcVidThumb.mcVidThumbFrame.gotoAndStop("off");		mcPlayIndicator.gotoAndStop("off");		txtName.textColor = txtAirDate.textColor = txtTime.textColor = txtOAD.textColor = txtRT.textColor = __tileColorRollOut;	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function setSelection():Void	{		// hide the tile background		mcVidNavBackground._visible = false;				// hide the RollOver highlight - mcVidRollOver		mcVidRollOver._visible = false;				mcVidThumb.mcVidThumbFrame.gotoAndStop("on");		mcPlayIndicator.gotoAndStop("on");		txtName.textColor = txtAirDate.textColor = txtTime.textColor = txtOAD.textColor = txtRT.textColor = __tileColorRollOver;				__selected = true;		useHandCursor = false;	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function resetSelection():Void	{		// show the tile background		mcVidNavBackground._visible = true;				mcVidThumb.mcVidThumbFrame.gotoAndStop("off");		mcPlayIndicator.gotoAndStop("off");		txtName.textColor = txtAirDate.textColor = txtTime.textColor = txtOAD.textColor = txtRT.textColor = __tileColorRollOut;				__selected = false;		useHandCursor = true;	}		/**	 * 	 *	 * @param xxxx xxxxxxx	 */	private function loadTextFields():Void	{		// fill in all of the TextFields		txtName.text = __vidName;		txtAirDate.text = __vidAirDate;		txtTime.text = __vidTime;	}						// public methods  --------------------------------------------------------------------------------------------------------------------------------------------------------------	/**	 * 	 *	 * @param xxxx xxxxxxx	 */	public function loadThumbImage(_image:String):Void	{				__mcl.loadClip(_image, mcVidThumb.mcThumbHolder);	}		/**	 * 	 */	public function setDataAndLoad(_thumbImage:String, _vidPath:String, _vidName:String, _vidAirDate:String, _vidTime:String):Void	{		// track the thumb image to load, video path, name, air date, and duration		__thumbImage = _thumbImage;		__vidPath = _vidPath;		__vidName = _vidName;		__vidAirDate = _vidAirDate;		__vidTime = _vidTime;				// fill the TextFields		loadTextFields();				// load the thumb image		loadThumbImage(__thumbImage);	}		/**	 * 	 */	public function get broadcaster():Broadcaster { return __broadcaster; };	public function set broadcaster(_val:Broadcaster):Void { __broadcaster = _val; };	/**	 * 	 */	public function get id():Number { return __id; };	public function set id(_val:Number):Void { __id = _val; };							// handlers/listeners  ----------------------------------------------------------------------------------------------------------------------------------------------------------	/**	 * 	 */	public function onRollOver():Void	{		if(!__selected) { setRollOver(); };	}		/**	 * 	 */	public function onRollOut():Void	{				if(!__selected) { resetRollOut(); };	}		/**	 * 	 */	public function onRelease():Void	{		// tell the MasterController to load the video		if(!__selected) { this.broadcaster.dispatchEvent("onTileClick", this); };	}				// end}