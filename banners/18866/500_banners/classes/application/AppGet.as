import org.papervision3d.cameras.Camera3D;import org.papervision3d.materials.MovieAssetMaterial;import org.papervision3d.objects.Plane;import org.papervision3d.scenes.MovieScene3D; import org.papervision3d.materials.MovieMaterial                                                   import mx.utils.Delegate;import gs.TweenLite;import gs.easing.*; import gs.plugins.*;class application.AppGet {	                             		private var _stage 			   				:MovieClip;		private var _cardCont						:MovieClip;		private var _camera							:Camera3D;	private var _scene							:MovieScene3D;   		private var _cardObj						:Object;	private var _cardFlag						:Boolean;			public function AppGet(mc:MovieClip, o:Object) {		_stage = mc;		_cardObj = o; 		_cardFlag = false;                    				TweenPlugin.activate([DropShadowFilterPlugin]);		init();	}		private function init():Void {      				_stage.cardContainer_mc.removeMovieClip();		_stage.onEnterFrame = null;						_stage.invis_btn.onRelease = Delegate.create(this, onReleaseClickThruHandler);		_stage.invis_btn.onRollOver = Delegate.create(this, shimmerCard);						playIntro(); 	}               		public function playIntro():Void {		_stage.copy1_mc._alpha = 100;		_stage.copy2_mc._alpha = 100;		_stage.copy3_mc._alpha = 100;								TweenLite.from(_stage.copy1_mc, 1, {_x:"-20", _alpha:0, delay:0.5, ease:Quad.easeOut, overwrite:3});		TweenLite.from(_stage.copy2_mc, 1, {_x:"20", _alpha:0, delay:1.3, ease:Quad.easeOut, overwrite:3});		TweenLite.from(_stage.copy3_mc, 1, {_x:"-20", _alpha:0, delay:1.5, ease:Quad.easeOut, overwrite:3});		TweenLite.to(null, 0, {delay:3, onComplete:setupCard, onCompleteScope:this, overwrite:3});	}                       		private function setupCard():Void {				_cardCont = _stage.cardContainer_mc;		_cardCont._x = Stage.width/2;		_cardCont._y = Stage.height/2;		                          		var cardWidth	:Number = 400;		var cardHeight	:Number = 250;		var faces		:Number = 4;   		var texture		:MovieAssetMaterial = createTexture("cardTexture");		var plane = new Plane(texture, cardWidth, cardHeight, faces, faces);				_scene		 = new MovieScene3D(_cardCont);		_camera		 = new Camera3D();    					                               		switch (_cardObj.enterHor){			case "left":				plane.x = Stage.width*2;				break;			case "right":				plane.x = -(Stage.width*2);				break;			case "center":				plane.x = Stage.width/2;				break;				default:			    plane.x = -(Stage.width/4)				break;		}          						switch (_cardObj.enterVer){			case "top":				plane.y = -Stage.height;				break;			case "bottom":				plane.y = Stage.height;				break;			case "center":				plane.y = Stage.height/2;				break;		}		plane.z = 2200;		plane.rotationY = _cardObj.rotInit; 		plane.rotationX = -5;				texture.oneSide = false;		texture.smooth = true;							_scene.push(plane);                             				_camera.zoom = _cardObj.zmInit;		_camera.focus = _cardObj.fInit;		_camera.z = _cardObj.zInit;               		                                    		TweenLite.to(plane, 2.5, {x:_cardObj.xFinal, y:_cardObj.yFinal, z:_cardObj.zFinal, rotationX:0, rotationY:180, ease:Quad.easeOut, overwrite:3});		TweenLite.to(plane.container, 1, {dropShadowFilter:{blurX:3, blurY:3, distance:3, alpha:0.6}, onComplete:killLoop, onCompleteScope:this, delay:1.5})				_stage.onEnterFrame = Delegate.create(this, renderLoop);						playFinal();			} 		private function playFinal():Void {         				TweenLite.to(_stage.copy1_mc, .4, {_alpha:0, delay:0.8, ease:Quad.easeOut, overwrite:3});		TweenLite.to(_stage.copy2_mc, .4, {_alpha:0, delay:0.8, ease:Quad.easeOut, overwrite:3});		TweenLite.to(_stage.copy3_mc, .4, {_alpha:0, delay:0.8, ease:Quad.easeOut, overwrite:3});						TweenLite.to(_stage.finalFrame_mc, .4, {_alpha:100, delay:0.9, ease:Quad.easeOut, overwrite:3})				TweenLite.from(_stage.finalFrame_mc.bullet1_mc, .7, {_alpha:0, _x:"10", delay:1.9, ease:Quad.easeOut, overwrite:3});		TweenLite.from(_stage.finalFrame_mc.bullet2_mc, .7, {_alpha:0, _x:"10", delay:2.4, ease:Quad.easeOut, overwrite:3});		TweenLite.from(_stage.finalFrame_mc.bullet3_mc, .7, {_alpha:0, _x:"10", delay:2.9, ease:Quad.easeOut, overwrite:3});					}                            		private function shimmerCard():Void {       		_stage.cardShimmer_mc.gotoAndPlay("shimmer");	}		private function renderLoop():Void { 		_scene.renderCamera( _camera );	}	                        		private function createTexture(assetName:String, trans:Boolean):MovieAssetMaterial {		var transpar:Boolean = (trans != undefined) ? trans : true;		var texture:MovieAssetMaterial = new MovieAssetMaterial(assetName, transpar);  		texture.oneSide = true;		texture.smooth = true;     				return texture;	}			private function killLoop():Void { 		_cardFlag = true;		shimmerCard();		_stage.onEnterFrame = null;		  	}		public function toString():String {		return "[classes App]";	}	          		private function onReleaseClickThruHandler():Void {		getURL(_root.clickTAG, "_blank");	}	       		private function onRolloverHandler():Void{		if (_cardFlag) shimmerCard(); 	}	}