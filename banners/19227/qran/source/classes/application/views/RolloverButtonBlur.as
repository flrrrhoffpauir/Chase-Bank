/** *	RolloverButtonBlur Class * *	@langversion ActionScript 3.0 *	@playerversion 9.0 *	@since 2010-01-14                       *	@author Junie *	@version 1.0.0 * *	all code copyright (c) 2009 T3 The Think Tank. All rights reserved. *	Re-use of this code without express written permission is prohibited. *	 */package application.views{	// import flash	import flash.display.*;	import flash.events.*;	import flash.external.*;    import flash.utils.*;	import flash.net.URLRequest;	import flash.net.navigateToURL;	// import external	import gs.*;	import gs.easing.*;	import gs.plugins.*;			import application.events.SlideShowEvent;	public class RolloverButtonBlur extends MovieClip	{		//---------------------------------------------------------------------		// variables		//---------------------------------------------------------------------		private var _scope:MovieClip;		private var _numOfPanels:Number;		private var _bannerID:Number;		private var _linkArray:Array;		private var _mcArray:Array;		private var _currPanel:Number;		private var _timer:Timer;		private var _bezArray:Array;                static private var SPEED:Number = 0.7;        static private var EASE:Function = Expo.easeOut;		static private var PAUSE_TIME:Number = 3;        		//---------------------------------------------------------------------		// constructor		//---------------------------------------------------------------------		public function RolloverButtonBlur(scope:MovieClip, numOfPanels:Number, bannerID:Number, linkArray:Array, bezArray:Array)		{			_scope 				= scope;			_numOfPanels 		= numOfPanels;			_bannerID 			= bannerID;			_linkArray 			= linkArray;			_bezArray			= bezArray;			_currPanel			= -1;			_mcArray 			= [];						TweenPlugin.activate([BezierThroughPlugin, BlurFilterPlugin, BezierPlugin]);						init();		};						//---------------------------------------------------------------------		// private methods and handlers		//---------------------------------------------------------------------				private function init():void		{			TweenLite.from(_scope.hero, SPEED*3, { alpha:0, ease:EASE });			TweenLite.from(_scope.headline, SPEED, { x:726, delay:SPEED, ease:EASE });						var rollover:MovieClip;			var panel:MovieClip;			var dlay:Number = 1;			for(var i:Number = 0; i < _numOfPanels; i++)			{				// -- init rollover clips												rollover = MovieClip(_scope.getChildByName("rollover"+i));				rollover.link = _linkArray[i];				rollover.id = i;				rollover.ox = rollover.x;				rollover.oy = rollover.y;				rollover.x = 900;				rollover.y = 210;					rollover.addEventListener(MouseEvent.ROLL_OVER, checkRollOver);				rollover.addEventListener(MouseEvent.ROLL_OUT, checkRollOut);				rollover.addEventListener(MouseEvent.CLICK, checkRelease);								rollover.buttonMode = rollover.useHandCursor = true;				rollover.mouseChildren = false;				TweenMax.to(rollover, SPEED*2, { delay:dlay, bezierThrough:[ { x:rollover.ox+_bezArray[i][0], y:rollover.oy+_bezArray[i][1] }, { x:rollover.ox, y:rollover.oy } ], orientToBezier:false, ease:EASE });				dlay += 0.2;												// -- init panel clips															panel = MovieClip(_scope.getChildByName("panel"+i));				panel.id = i;				panel.alpha = 0;				panel.ox = panel.x;				panel.x = panel.ox-20;												panel.addEventListener(MouseEvent.ROLL_OVER, checkPanelRollOver);				panel.addEventListener(MouseEvent.ROLL_OUT, checkPanelRollOut);								if(panel.link0)				{					panel.link0.link = _linkArray[i][0]					panel.link0.addEventListener(MouseEvent.CLICK, checkRelease);					if(panel.link1)					{						panel.link1.link = _linkArray[i][1];						panel.link1.addEventListener(MouseEvent.CLICK, checkRelease);					}				}				panel.buttonMode = panel.useHandCursor = true;				panel.mouseChildren = false;				panel.mouseEnabled = false;												// store each type in an array								_mcArray[i] = [rollover, panel];							};						TweenMax.delayedCall(.05, dispatchEvent, [new SlideShowEvent(SlideShowEvent.PAUSE_SHOW)]);			TweenMax.delayedCall(dlay, startTimer, null);		};						private function selectPanel(num:Number):void		{			_currPanel = num;						TweenMax.to(_scope.headline, SPEED, { alpha:0, ease:EASE });						var a:Number = 0;			for(var i:Number = 0; i < _numOfPanels; i++)			{				if(num == i)				{					_scope.setChildIndex(_mcArray[i][1], _scope.numChildren - 1);					_scope.setChildIndex(_mcArray[i][0], _scope.numChildren - 1);					showPanel(_mcArray[i][1]);					selectRollover(_mcArray[i][0]);				} else {					hidePanel(_mcArray[i][1]);					deselectRollover(_mcArray[i][0]);				};			};		};						private function checkRollOver(e:MouseEvent):void		{			// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						if(_timer.running) _timer.stop();						selectPanel(e.currentTarget.id);		};						private function checkRollOut(e:MouseEvent):void		{			var id:Number = e.currentTarget.id;			if(!checkHitTest(id, 1))			{				// resume the slide show				dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));								// hide panel and normalize rollover				hidePanel(_mcArray[id][1]);				normalizeRollovers();			} else {				//			}					};						private function checkRelease(e:MouseEvent):void		{			if(e.currentTarget.link != "")			{				var req:URLRequest = new URLRequest(e.currentTarget.link);				navigateToURL(req, "_self");			};		};				private function checkPanelRollOver(e:MouseEvent):void		{			// pause the slide show			dispatchEvent(new SlideShowEvent(SlideShowEvent.PAUSE_SHOW));						if(_timer.running) _timer.stop();		};						private function checkPanelRollOut(e:MouseEvent):void		{			var id:Number = e.currentTarget.id;			if(!checkHitTest(id, 0))			{				// if you roll off and are not touching the right rollover				dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));								// hide panel and normalize rollover				hidePanel(_mcArray[id][1]);				normalizeRollovers();			} else {				//			};		};						private function checkHitTest(id:Number, i:Number):Boolean		{			var hit:Boolean = _mcArray[id][i].hitTestPoint(mouseX, mouseY);			return hit;		};						private function selectPanelFromTimer(e:TimerEvent):void		{			if(_currPanel == _numOfPanels - 1)			{				_timer.stop();				dispatchEvent(new SlideShowEvent(SlideShowEvent.RESUME_SHOW));								hidePanel(_mcArray[_numOfPanels-1][1]);				normalizeRollovers();			} else {				selectPanel(_currPanel + 1);			};		};						private function startTimer():void		{			_timer = new Timer(PAUSE_TIME * 1000);			_timer.addEventListener(TimerEvent.TIMER, selectPanelFromTimer);			_timer.start();		};						private function selectRollover(mc:MovieClip):void		{			TweenMax.to(mc, SPEED, { alpha:1, xscale:1, yscale:1, blurFilter:{ blurX:0, blurY:0 }, ease:EASE });			TweenMax.to(mc.bg, SPEED, { colorTransform:{ tint:0x631B6F }, ease:EASE });		    TweenMax.to(mc.btn.buttonGlow, SPEED, { alpha:1, ease:EASE });			TweenMax.to(mc.btn.gray, SPEED/2, { alpha:0, ease:EASE });		};                		private function deselectRollover(mc:MovieClip):void		{			TweenMax.to(mc, SPEED, { alpha:0.7, xscale:0.8, yscale:0.8, blurFilter:{ blurX:5, blurY:5 }, ease:EASE });			TweenMax.to(mc.bg, SPEED, { removeTint:true, ease:EASE });		    TweenMax.to(mc.btn.buttonGlow, SPEED, { alpha:0, ease:EASE });			TweenMax.to(mc.btn.gray, SPEED/2, { alpha:1, ease:EASE });		};						private function normalizeRollovers():void		{			TweenMax.to(_scope.headline, SPEED, { alpha:1, ease:EASE });						var mc:MovieClip;			for(var i:Number = 0; i < _numOfPanels; i++)			{				mc = _mcArray[i][0];				TweenMax.to(mc, SPEED, { alpha:1, xscale:1, yscale:1, blurFilter:{ blurX:0, blurY:0 }, ease:EASE });				TweenMax.to(mc.bg, SPEED, { removeTint:true, ease:EASE });		    	TweenMax.to(mc.btn.buttonGlow, SPEED, { alpha:0, ease:EASE });				TweenMax.to(mc.btn.gray, SPEED/2, { alpha:1, ease:EASE });			};		};                		private function showPanel(mc:MovieClip):void		{			mc.mouseEnabled = mc.mouseChildren = true;			TweenLite.to(mc, SPEED, { x:mc.ox, alpha:1, ease:EASE });		};						private function hidePanel(mc:MovieClip):void		{			mc.mouseEnabled = mc.mouseChildren = false;			TweenLite.to(mc, SPEED, { x:mc.ox-20, alpha:0, ease:EASE });		};			};	}; // end