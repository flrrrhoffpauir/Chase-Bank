/** *	SimpleBannerHotspot Class, Created 2007-10-01 *	Copyright (c) 2007 T3. All rights reserved. * *	Use to set up the Hotspot of the banner. Dimensions *  for the hotspot will be set based on the Stage dimensions. *  Invoke the setClickTag() method to create the onRelease *  handler for the hotspot. *   *	@author Timothy Harold *	@version 1.0 *	*/class classes.utils.SimpleBannerHotspot{	// static properties			// private properties	private var __targetHotspot:MovieClip;		// public properties				// Class constructor	/**	 * Sets the dimensions and position for the hotspot. Invoke the 	 * setClickTag() method to create the onRelease handler for the 	 * hotspot.	 *	 * @params _targetHotspot A reference to the Hotspot.	 */	function SimpleBannerHotspot(_targetHotspot:MovieClip)	{		// reference to the Hotspot		__targetHotspot = _targetHotspot;				// set the dimensions of the Hotspot		setHotspotSize();	}				// private methods  ------------------------------------------------------------------------------	/**	 * Sets the dimensions and position of the hotspot. Called in the constructor.	 */	private function setHotspotSize():Void	{				// grab the Stage width and height		var hWidth:Number = Stage.width;		var hHeight:Number = Stage.height;				// set the dimensions		__targetHotspot._width = hWidth;		__targetHotspot._height = hHeight;				// set to 0, 0		__targetHotspot._x = __targetHotspot._y = 0;	}			/**	 * Creates the onRelease handler for the hotspot.	 *	 * @param _clickURL A String that represents the URL used for redirect.	 */	public function setClickURL(_clickURL:String):Void	{		// set up the click		__targetHotspot.onRelease = function():Void		{			getURL(_clickURL, "_blank");		}	}			/**	 * Creates the onRelease handler for the hotspot. (alternate)	 * Automatically references the URL for clickTag1, clickTAG, or	 * clickTag llocated on the Main Timeline.	 *	 * @param _safetyURL A safety precaution should no valid URL be passed	 */	public function safeClickURL(_safetyURL:String):Void	{		// set up the click		__targetHotspot.onRelease = function():Void		{			if(typeof(_root.clickTag1) == "undefined")			{				if(typeof(_root.clickTAG) == "undefined")				{					if(typeof(_root.clickTag) == "undefined")					{ 						getURL(_safetyURL); 					}					else					{ 						getURL(_root.clickTag); 					}				}				else				{					getURL(_root.clickTAG); 				}			}			else			{				getURL(_root.clickTag1); 			} 		}	}						// public methods  -------------------------------------------------------------------------------					// handlers/listeners  ---------------------------------------------------------------------------					// end}